---
title: '15: Git commit history'
jupyter:
  jupytext:
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.16.1
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

See <https://bellecp.github.io/597-Data-Wrangling-Spring-2024/project.html#clear-commit-history>.
Describe your contributions below.

* * *

```{python}
import matplotlib.pyplot as plt
from git import Repo
import collections

#repo = Repo("/Users/shubham/Documents/Rutgers University/MS in Data Science/Spring 2024/Data Wrangling/Project/Digital-Dynamos")
repo = Repo("C:/Users/runad/Downloads/Digital-Dynamos")
commits = list(repo.iter_commits('main'))

commit_counts = collections.Counter(commit.author.name for commit in commits)

names = list(commit_counts.keys())
counts = list(commit_counts.values())

plt.bar(names, counts)
plt.title('Commit Counts by Author')
plt.xlabel('Author')
plt.ylabel('Number of Commits')
plt.xticks(rotation=90)
plt.show()
```

```{python}
import matplotlib.dates as mdates

repo = Repo("C:/Users/runad/Downloads/Digital-Dynamos")

commits = list(repo.iter_commits('main'))

dates = [commit.committed_datetime for commit in commits]
authors = [commit.author.name for commit in commits]
messages = [commit.message for commit in commits]
tags = [tag for tag in repo.tags]

commit_data = collections.defaultdict(list)

for commit in commits:
    commit_data[commit.author.name].append(commit.committed_datetime)

fig, ax = plt.subplots()

for author, dates in commit_data.items():
    ax.plot_date(dates, [author]*len(dates), 'o', linestyle='none')

ax.xaxis.set_major_locator(mdates.YearLocator())
ax.xaxis.set_minor_locator(mdates.MonthLocator())
ax.xaxis.set_major_formatter(mdates.DateFormatter('%Y'))

plt.title('Commit History by Author')
plt.xlabel('Date')
plt.ylabel('Author')
plt.show()

#print(dates)
for i, message in enumerate(messages):
    print(f"Author {i+1}: {authors[i]} - Commit {i+1}: {message}")
```
